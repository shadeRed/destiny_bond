/**
 * plugin.js

 */

/*global tinymce:true */
/*
05/01/2017 - MKA: New plugin
*/

tinymce.PluginManager.add('contentblock', function (editor, url) {

    function createLinkList(callback) {
        return function () {
            var linkList = editor.settings.contentblock_list;

            if (typeof (linkList) == "string") {
                tinymce.util.XHR.send({
                    url: linkList,
                    success: function (text) {
                        callback(tinymce.util.JSON.parse(text));
                    },
                    error: function () {
                        alert("No Content Blocks to Insert or Content Block Functionality not available on this site.");
                        throw "No Content Blocks to Insert";
                    }
                });
            } else if (typeof (linkList) == "function") {
                linkList(callback);
            } else {
                callback(linkList);
            }
        };
    }

    function buildListItems(inputList, itemCallback, startItems) {
        function appendItems(values, output) {
            output = output || [];
            tinymce.each(values, function (item) {
                var menuItem = { text: item.text || item.title };
                if (item.menu) {
                    menuItem.menu = appendItems(item.menu);
                } else {
                    menuItem.value = item.value;
                    if (itemCallback) {
                        itemCallback(menuItem);
                    }
                }
                output.push(menuItem);
            });
            return output;
        }
        return appendItems(inputList, startItems || []);
    }


    function showDialog(linkList) {
        var data = {}, selection = editor.selection, dom = editor.dom, selectedElm, anchorElm, initialText;
        var win, linkListCtrl, value;

        selectedElm = selection.getNode();

        if (linkList) {
            linkListCtrl = {
                autofocus: true,
                name: 'contentblockkey',
                type: 'listbox',
                label: 'Content Block list',
                values: buildListItems(linkList),
                value: data.target
            };
        } else {
            alert("No Content Blocks to Insert or Content Block Functionality not available on this site.");
            throw "No Content Blocks to Insert";
        }


        win = editor.windowManager.open({
            title: 'Content Block Marker',
            data: data,
            body: [
				linkListCtrl,
            ],
            onSubmit: function (e) {
                var cbnode;

                data = tinymce.extend(data, e.data);
                cbnode = data.contentblockkey;

                function inserContentBlockMarker() {
                    var linkAttrs = {
                        name: cbnode,
                        class: "mceNonEditable",
                    };
                    editor.insertContent(dom.createHTML('contentblock', linkAttrs, "Content Block Placeholder: " + cbnode) + "\n");
                }
                inserContentBlockMarker();
            }
        });


    }





    this.showDialog = showDialog;


    // Adds a menu item to the tools menu
    editor.addMenuItem('contentblock', {
        icon: 'template',
        text: 'Content Block Marker',
        context: 'tools',
        onclick: createLinkList(showDialog),
        context: 'insert',
        prependToContext: true
    });
});
