const toBase64 = file => new Promise((resolve, reject) => {
    const reader = new FileReader();
    reader.readAsDataURL(file);
    reader.onload = () => resolve(reader.result);
    reader.onerror = error => reject(error);
});

tinymce.PluginManager.add('image', function(editor) {
	let createImage = () => {
		let positioned_at = editor.selection.getNode();

		let input = document.createElement('input');
		input.setAttribute('type', 'file');
		input.setAttribute('accept', 'image/png, image/jpeg');
		input.click();

		input.onchange = (event) => {
			let file = event.target.files[0];
			let img = document.createElement('img');

			toBase64(file).then(data => {
				img.setAttribute('src', data);
				positioned_at.after(img);
			});
		}
	}

	editor.addButton('image', {
		icon: 'image',
		tooltip: 'Insert/edit image',
		onclick: createImage,
		stateSelector: 'img:not([data-mce-object],[data-mce-placeholder])'
	});

	editor.addMenuItem('image', {
		icon: 'image',
		text: 'Insert image',
		onclick: createImage,
		context: 'insert',
		prependToContext: true
	});

	editor.addCommand('mceImage', createImage);
});